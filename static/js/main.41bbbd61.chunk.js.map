{"version":3,"sources":["Components/LoginForm.jsx","Components/MyMessage.jsx","Components/TheirMessage.jsx","Components/MessageForm.jsx","Components/ChatFeed.jsx","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","useState","username","setUsername","password","setPassword","error","setError","handleSubmit","e","a","preventDefault","authObject","axios","get","headers","localStorage","setItem","window","location","reload","className","onSubmit","type","value","onChange","target","placeholder","required","align","MyMessage","message","attachments","length","src","file","alt","style","float","marginRight","color","backgroundColor","text","TheirMessage","lastMessge","isFirstMessageByUser","sender","backgroundImage","avatar","attachment","marginLeft","MessageForm","props","setValue","chatId","creds","event","trim","sendMessage","isTyping","htmlFor","PictureOutlined","multiple","id","display","files","SendOutlined","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","lastMessage","renderMessages","height","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41bbbd61.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\n\nconst LoginForm = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const authObject = {\n      \"Project-ID\": \"f3cd408b-4e3c-467b-bcab-e455038f3914\",\n      \"User-name\": username,\n      \"User-secret\": password,\n    };\n    try {\n      await axios.get(\"https://api.chatengine.io/chats\", {\n        headers: authObject,\n      });\n      localStorage.setItem(\"username\", username);\n      localStorage.setItem(\"password\", password);\n      window.location.reload();\n      setError(\"\");\n    } catch (err) {\n      setError(\"Oops, incorrect credentials.\");\n    }\n  };\n  return (\n    <div className=\"wrapper\">\n      <div className=\"form\">\n        <h1 className=\"title\">Chat Application</h1>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            className=\"input\"\n            placeholder=\"Username\"\n            required\n          />\n          <input\n            type=\"text\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            className=\"input\"\n            placeholder=\"Password\"\n            required\n          />\n          <div align=\"center\">\n            <button type=\"submit\" className=\"button\">\n              <span>Start Chatting</span>\n            </button>\n          </div>\n          <h2 className=\"error\">{error}</h2>\n        </form>\n      </div>\n    </div>\n  );\n};\nexport default LoginForm;\n","const MyMessage = ({ message }) => {\n  if (message.attachments && message.attachments.length > 0) {\n    return (\n      <img\n        src={message.attachments[0].file}\n        alt=\"message attachment\"\n        className=\"message-image\"\n        style={{ float: \"right\" }}\n      />\n    );\n  }\n  return (\n    <div\n      className=\"message\"\n      style={{\n        float: \"right\",\n        marginRight: \"18px\",\n        color: \"white\",\n        backgroundColor: \"#3B2A50\",\n      }}\n    >\n      {message.text}\n    </div>\n  );\n};\nexport default MyMessage;\n","const TheirMessage = ({ lastMessge, message }) => {\n  const isFirstMessageByUser =\n    !lastMessge || lastMessge.sender.username !== message.sender.username;\n\n  return (\n    <div className=\"message-row\">\n      {isFirstMessageByUser && (\n        <div\n          className=\"message-avatar\"\n          style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\n        />\n      )}\n      {message?.attachments?.length > 0 ? (\n        <img\n          src={message.attachment[0].file}\n          alt=\"message attachment\"\n          className=\"message-image\"\n          style={{ marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\" }}\n        />\n      ) : (\n        <div\n          className=\"message\"\n          style={{\n            float: \"left\",\n            backgroundColor: \"#CABCDC\",\n            marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\",\n          }}\n        >\n          {message.text}\n        </div>\n      )}\n      TheirMessage\n    </div>\n  );\n};\nexport default TheirMessage;\n","import { useState } from \"react\";\nimport { sendMessage, isTyping } from \"react-chat-engine\";\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\";\n\nconst MessageForm = (props) => {\n  const [value, setValue] = useState(\"\");\n  const { chatId, creds } = props;\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const text = value.trim();\n\n    if (text.length > 0) {\n      sendMessage(creds, chatId, { text });\n    }\n\n    setValue(\"\");\n  };\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n\n    isTyping(props, chatId);\n  };\n\n  const handleUpload = (event) => {\n    sendMessage(creds, chatId, { files: event.target.files, text: \"\" });\n  };\n\n  return (\n    <form className=\"message-form\" onSubmit={handleSubmit}>\n      <input\n        placeholder=\"Send a message...\"\n        className=\"message-input\"\n        value={value}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n      <label htmlFor=\"upload-button\" className=\"html\">\n        <span className=\"image-button\">\n          <PictureOutlined className=\"picture-icon\" />\n        </span>\n      </label>\n      <input\n        type=\"file\"\n        multiple={false}\n        id=\"upload-button\"\n        style={{ display: \"none\" }}\n        onChange={handleUpload}\n      />\n      <button type=\"submit\" className=\"send-button\">\n        <SendOutlined className=\"send-icon\" />\n      </button>\n    </form>\n  );\n};\nexport default MessageForm;\n","import MyMessage from \"./MyMessage\";\nimport TheirMessage from \"./TheirMessage\";\nimport MessageForm from \"./MessageForm\";\n\nconst ChatFeed = (props) => {\n  const { chats, activeChat, userName, messages } = props;\n\n  const chat = chats && chats[activeChat];\n\n  const renderReadReceipts = (message, isMyMessage) =>\n    chat.people.map(\n      (person, index) =>\n        person.last_read === message.id && (\n          <div\n            key={`read_${index}`}\n            className=\"read-receipt\"\n            style={{\n              float: isMyMessage ? \"right\" : \"left\",\n              backgroundImage:\n                person.person.avatar && `url(${person.person.avatar})`,\n            }}\n          />\n        )\n    );\n\n  const renderMessages = () => {\n    const keys = Object.keys(messages);\n\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n      return (\n        <div key={`msg_${index}`} style={{ width: \"100%\" }}>\n          <div className=\"message-block\">\n            {isMyMessage ? (\n              <MyMessage message={message} />\n            ) : (\n              <TheirMessage\n                message={message}\n                lastMessage={messages[lastMessageKey]}\n              />\n            )}\n          </div>\n          <div\n            className=\"read-receipts\"\n            style={{\n              marginRight: isMyMessage ? \"18px\" : \"0px\",\n              marginLeft: isMyMessage ? \"0px\" : \"68px\",\n            }}\n          >\n            {renderReadReceipts(message, isMyMessage)}\n          </div>\n        </div>\n      );\n    });\n  };\n  if (!chat) return \"Loading ... \";\n\n  return (\n    <div className=\"chat-feed\">\n      <div className=\"chat-title-container\">\n        <div className=\"chat-title\">{chat?.title}</div>\n        <div className=\"chat-subtitle\">\n          {chat.people.map((person) => ` ${person.person.username}`)}\n        </div>\n      </div>\n      {renderMessages()}\n      <div style={{ height: \"100px\" }} />\n      <div className=\"message-form-container\">\n        <MessageForm {...props} chatId={activeChat} />\n      </div>\n    </div>\n  );\n};\nexport default ChatFeed;\n","import \"./App.css\";\nimport { ChatEngine } from \"react-chat-engine\";\nimport LoginForm from \"./Components/LoginForm\";\nimport ChatFeed from \"./Components/ChatFeed\";\n\nfunction App() {\n  if (!localStorage.getItem(\"username\")) return <LoginForm />;\n  return (\n    <ChatEngine\n      height=\"100vh\"\n      projectID=\"f3cd408b-4e3c-467b-bcab-e455038f3914\"\n      userName={localStorage.getItem(\"username\")}\n      userSecret={localStorage.getItem(\"password\")}\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\n    />\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}